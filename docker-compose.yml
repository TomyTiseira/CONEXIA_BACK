services:
  nats-server:
    image: nats:2.10.25-alpine3.21
    ports:
      - "8222:8222"

  api-gateway:
    build: ./api-gateway
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    volumes:
      - ./api-gateway/src:/src/app/src
    command: npm run start:dev
    environment:
      - NATS_SERVERS=nats://nats-server:4222
      - PORT=${API_GATEWAY_PORT}

  users:
    build: ./users
    volumes:
      - ./users/src:/src/app/src
    command: npm run start:dev
    depends_on:
      users-db:
        condition: service_healthy
    environment:
      - NATS_SERVERS=nats://nats-server:4222
      - DB_HOST=users-db
      - DB_PORT=${USERS_DB_PORT}
      - DB_USERNAME=${USERS_DB_USER}
      - DB_PASSWORD=${USERS_DB_PASSWORD}
      - DB_DATABASE=${USERS_DB_NAME}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_SECURE=${SMTP_SECURE}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
      - EMAIL_FROM=${EMAIL_FROM}

  users-db:
    image: postgres:16.5-alpine
    ports:
      - "${USERS_DB_PORT}:${USERS_DB_PORT}"
    environment:
      - POSTGRES_USER=${USERS_DB_USER}
      - POSTGRES_PASSWORD=${USERS_DB_PASSWORD}
      - POSTGRES_DB=${USERS_DB_NAME}
    volumes:
      - ./users/postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USERS_DB_USER} -d ${USERS_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
