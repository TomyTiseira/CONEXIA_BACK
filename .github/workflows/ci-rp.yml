name: CI - PR

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    environment: develop
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Crea archivo .env con secretos
        run: |
          echo "API_GATEWAY_PORT=${{ secrets.API_GATEWAY_PORT }}" >> .env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> .env
          echo "USERS_DB_USER=${{ secrets.USERS_DB_USER }}" >> .env
          echo "USERS_DB_PASSWORD=${{ secrets.USERS_DB_PASSWORD }}" >> .env
          echo "USERS_DB_NAME=${{ secrets.USERS_DB_NAME }}" >> .env
          echo "USERS_DB_HOST=${{ secrets.USERS_DB_HOST }}" >> .env
          echo "USERS_DB_PORT=${{ secrets.USERS_DB_PORT }}" >> .env
          echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> .env
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
          echo "SMTP_SECURE=${{ secrets.SMTP_SECURE }}" >> .env
          echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> .env
          echo "SMTP_PASS=${{ secrets.SMTP_PASS }}" >> .env
          echo "EMAIL_FROM=${{ secrets.EMAIL_FROM }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "NATS_SERVERS=${{ secrets.NATS_SERVERS }}" >> .env

      - name: Docker compose build
        run: docker compose -f docker-compose.yml build

      - name: Run linter for API Gateway
        run: |
          docker compose -f docker-compose.yml run --rm --no-deps api-gateway npm run lint --max-warnings=0 || exit 1

      - name: Run linter for Users service
        run: |
          docker compose -f docker-compose.yml run --rm --no-deps users npm run lint --max-warnings=0 || exit 1
